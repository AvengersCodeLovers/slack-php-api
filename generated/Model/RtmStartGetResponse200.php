<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JoliCode\Slack\Api\Model;

class RtmStartGetResponse200 extends \ArrayObject
{
    /**
     * @var mixed[]
     */
    protected $bots;
    /**
     * @var int
     */
    protected $cacheTs;
    /**
     * @var string
     */
    protected $cacheTsVersion;
    /**
     * @var string
     */
    protected $cacheVersion;
    /**
     * @var bool
     */
    protected $canManageSharedChannels;
    /**
     * @var mixed[]
     */
    protected $channels;
    /**
     * @var bool
     */
    protected $deadPig;
    /**
     * @var ObjsDnd
     */
    protected $dnd;
    /**
     * Group objects present for rtm.start. Can be null when there are no groups.
     *
     * @var mixed[]
     */
    protected $groups;
    /**
     * @var mixed[]
     */
    protected $ims;
    /**
     * @var string
     */
    protected $latestEventTs;
    /**
     * Mpim objects present for rtm.start. Can be null when there are no mpims.
     *
     * @var mixed[]
     */
    protected $mpims;
    /**
     * @var mixed[]
     */
    protected $nonThreadableChannels;
    /**
     * @var bool
     */
    protected $ok;
    /**
     * @var mixed[]
     */
    protected $readOnlyChannels;
    /**
     * @var RtmStartGetResponse200Self
     */
    protected $self;
    /**
     * @var RtmStartGetResponse200Subteams
     */
    protected $subteams;
    /**
     * @var ObjsTeam
     */
    protected $team;
    /**
     * @var mixed[]
     */
    protected $threadOnlyChannels;
    /**
     * @var string
     */
    protected $url;
    /**
     * @var ObjsUser[]
     */
    protected $users;

    /**
     * @return mixed[]|null
     */
    public function getBots(): ?array
    {
        return $this->bots;
    }

    /**
     * @param mixed[]|null $bots
     *
     * @return self
     */
    public function setBots(?array $bots): self
    {
        $this->bots = $bots;

        return $this;
    }

    /**
     * @return int|null
     */
    public function getCacheTs(): ?int
    {
        return $this->cacheTs;
    }

    /**
     * @param int|null $cacheTs
     *
     * @return self
     */
    public function setCacheTs(?int $cacheTs): self
    {
        $this->cacheTs = $cacheTs;

        return $this;
    }

    /**
     * @return string|null
     */
    public function getCacheTsVersion(): ?string
    {
        return $this->cacheTsVersion;
    }

    /**
     * @param string|null $cacheTsVersion
     *
     * @return self
     */
    public function setCacheTsVersion(?string $cacheTsVersion): self
    {
        $this->cacheTsVersion = $cacheTsVersion;

        return $this;
    }

    /**
     * @return string|null
     */
    public function getCacheVersion(): ?string
    {
        return $this->cacheVersion;
    }

    /**
     * @param string|null $cacheVersion
     *
     * @return self
     */
    public function setCacheVersion(?string $cacheVersion): self
    {
        $this->cacheVersion = $cacheVersion;

        return $this;
    }

    /**
     * @return bool|null
     */
    public function getCanManageSharedChannels(): ?bool
    {
        return $this->canManageSharedChannels;
    }

    /**
     * @param bool|null $canManageSharedChannels
     *
     * @return self
     */
    public function setCanManageSharedChannels(?bool $canManageSharedChannels): self
    {
        $this->canManageSharedChannels = $canManageSharedChannels;

        return $this;
    }

    /**
     * @return mixed[]|null
     */
    public function getChannels(): ?array
    {
        return $this->channels;
    }

    /**
     * @param mixed[]|null $channels
     *
     * @return self
     */
    public function setChannels(?array $channels): self
    {
        $this->channels = $channels;

        return $this;
    }

    /**
     * @return bool|null
     */
    public function getDeadPig(): ?bool
    {
        return $this->deadPig;
    }

    /**
     * @param bool|null $deadPig
     *
     * @return self
     */
    public function setDeadPig(?bool $deadPig): self
    {
        $this->deadPig = $deadPig;

        return $this;
    }

    /**
     * @return ObjsDnd|null
     */
    public function getDnd(): ?ObjsDnd
    {
        return $this->dnd;
    }

    /**
     * @param ObjsDnd|null $dnd
     *
     * @return self
     */
    public function setDnd(?ObjsDnd $dnd): self
    {
        $this->dnd = $dnd;

        return $this;
    }

    /**
     * Group objects present for rtm.start. Can be null when there are no groups.
     *
     * @return mixed[]|null
     */
    public function getGroups(): ?array
    {
        return $this->groups;
    }

    /**
     * Group objects present for rtm.start. Can be null when there are no groups.
     *
     * @param mixed[]|null $groups
     *
     * @return self
     */
    public function setGroups(?array $groups): self
    {
        $this->groups = $groups;

        return $this;
    }

    /**
     * @return mixed[]|null
     */
    public function getIms(): ?array
    {
        return $this->ims;
    }

    /**
     * @param mixed[]|null $ims
     *
     * @return self
     */
    public function setIms(?array $ims): self
    {
        $this->ims = $ims;

        return $this;
    }

    /**
     * @return string|null
     */
    public function getLatestEventTs(): ?string
    {
        return $this->latestEventTs;
    }

    /**
     * @param string|null $latestEventTs
     *
     * @return self
     */
    public function setLatestEventTs(?string $latestEventTs): self
    {
        $this->latestEventTs = $latestEventTs;

        return $this;
    }

    /**
     * Mpim objects present for rtm.start. Can be null when there are no mpims.
     *
     * @return mixed[]|null
     */
    public function getMpims(): ?array
    {
        return $this->mpims;
    }

    /**
     * Mpim objects present for rtm.start. Can be null when there are no mpims.
     *
     * @param mixed[]|null $mpims
     *
     * @return self
     */
    public function setMpims(?array $mpims): self
    {
        $this->mpims = $mpims;

        return $this;
    }

    /**
     * @return mixed[]|null
     */
    public function getNonThreadableChannels(): ?array
    {
        return $this->nonThreadableChannels;
    }

    /**
     * @param mixed[]|null $nonThreadableChannels
     *
     * @return self
     */
    public function setNonThreadableChannels(?array $nonThreadableChannels): self
    {
        $this->nonThreadableChannels = $nonThreadableChannels;

        return $this;
    }

    /**
     * @return bool|null
     */
    public function getOk(): ?bool
    {
        return $this->ok;
    }

    /**
     * @param bool|null $ok
     *
     * @return self
     */
    public function setOk(?bool $ok): self
    {
        $this->ok = $ok;

        return $this;
    }

    /**
     * @return mixed[]|null
     */
    public function getReadOnlyChannels(): ?array
    {
        return $this->readOnlyChannels;
    }

    /**
     * @param mixed[]|null $readOnlyChannels
     *
     * @return self
     */
    public function setReadOnlyChannels(?array $readOnlyChannels): self
    {
        $this->readOnlyChannels = $readOnlyChannels;

        return $this;
    }

    /**
     * @return RtmStartGetResponse200Self|null
     */
    public function getSelf(): ?RtmStartGetResponse200Self
    {
        return $this->self;
    }

    /**
     * @param RtmStartGetResponse200Self|null $self
     *
     * @return self
     */
    public function setSelf(?RtmStartGetResponse200Self $self): self
    {
        $this->self = $self;

        return $this;
    }

    /**
     * @return RtmStartGetResponse200Subteams|null
     */
    public function getSubteams(): ?RtmStartGetResponse200Subteams
    {
        return $this->subteams;
    }

    /**
     * @param RtmStartGetResponse200Subteams|null $subteams
     *
     * @return self
     */
    public function setSubteams(?RtmStartGetResponse200Subteams $subteams): self
    {
        $this->subteams = $subteams;

        return $this;
    }

    /**
     * @return ObjsTeam|null
     */
    public function getTeam(): ?ObjsTeam
    {
        return $this->team;
    }

    /**
     * @param ObjsTeam|null $team
     *
     * @return self
     */
    public function setTeam(?ObjsTeam $team): self
    {
        $this->team = $team;

        return $this;
    }

    /**
     * @return mixed[]|null
     */
    public function getThreadOnlyChannels(): ?array
    {
        return $this->threadOnlyChannels;
    }

    /**
     * @param mixed[]|null $threadOnlyChannels
     *
     * @return self
     */
    public function setThreadOnlyChannels(?array $threadOnlyChannels): self
    {
        $this->threadOnlyChannels = $threadOnlyChannels;

        return $this;
    }

    /**
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * @param string|null $url
     *
     * @return self
     */
    public function setUrl(?string $url): self
    {
        $this->url = $url;

        return $this;
    }

    /**
     * @return ObjsUser[]|null
     */
    public function getUsers(): ?array
    {
        return $this->users;
    }

    /**
     * @param ObjsUser[]|null $users
     *
     * @return self
     */
    public function setUsers(?array $users): self
    {
        $this->users = $users;

        return $this;
    }
}
