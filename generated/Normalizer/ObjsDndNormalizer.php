<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JoliCode\Slack\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ObjsDndNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'JoliCode\\Slack\\Api\\Model\\ObjsDnd';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'JoliCode\\Slack\\Api\\Model\\ObjsDnd';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \JoliCode\Slack\Api\Model\ObjsDnd();
        $data = clone $data;
        if (property_exists($data, 'dnd_enabled') && $data->{'dnd_enabled'} !== null) {
            $object->setDndEnabled($data->{'dnd_enabled'});
            unset($data->{'dnd_enabled'});
        }
        if (property_exists($data, 'next_dnd_end_ts') && $data->{'next_dnd_end_ts'} !== null) {
            $object->setNextDndEndTs($data->{'next_dnd_end_ts'});
            unset($data->{'next_dnd_end_ts'});
        }
        if (property_exists($data, 'next_dnd_start_ts') && $data->{'next_dnd_start_ts'} !== null) {
            $object->setNextDndStartTs($data->{'next_dnd_start_ts'});
            unset($data->{'next_dnd_start_ts'});
        }
        if (property_exists($data, 'snooze_enabled') && $data->{'snooze_enabled'} !== null) {
            $object->setSnoozeEnabled($data->{'snooze_enabled'});
            unset($data->{'snooze_enabled'});
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', $key)) {
                $object[$key] = $value;
            }
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getDndEnabled()) {
            $data->{'dnd_enabled'} = $object->getDndEnabled();
        }
        if (null !== $object->getNextDndEndTs()) {
            $data->{'next_dnd_end_ts'} = $object->getNextDndEndTs();
        }
        if (null !== $object->getNextDndStartTs()) {
            $data->{'next_dnd_start_ts'} = $object->getNextDndStartTs();
        }
        if (null !== $object->getSnoozeEnabled()) {
            $data->{'snooze_enabled'} = $object->getSnoozeEnabled();
        }
        foreach ($object as $key => $value) {
            if (preg_match('/.*/', $key)) {
                $data->{$key} = $value;
            }
        }

        return $data;
    }
}
